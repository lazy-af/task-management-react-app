{"version":3,"sources":["components/Navbar/Navbar.jsx","components/Footer/Footer.jsx","components/EmptyTaskPage/EmptyTaskPage.jsx","components/AlertBox/AlertBox.jsx","components/CongratsModal/CongratsModal.jsx","components/TaskBlock/TaskBlock.jsx","components/NonEmptyTaskPage/NonEmptyTaskPage.jsx","DateTimePicker.js","components/TaskModal/TaskModal.jsx","components/AboutModal/AboutModal.jsx","App.js","index.js"],"names":["Navbar","props","className","src","alt","onClick","addClicked","fontSize","userClicked","Footer","role","style","color","EmptyTaskPage","clicked","cursor","marginTop","AlertDialog","React","useState","open","setOpen","handleClose","Button","background","variant","size","children","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","clickedDelete","autoFocus","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","border","boxShadow","shadows","padding","spacing","TransitionsModal","classes","done","setDone","disabled","clickedDone","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","TaskBlock","renderTime","remainingTime","isPlaying","duration","seconds","colors","onComplete","marginBottom","workTitle","dateEntered","timeEntered","NonEmptyTaskPage","flexWrap","tasks","map","task","key","container","textField","marginLeft","marginRight","width","DateAndTimePickers","TaskModal","work","setWork","currentDate","setCurrentDate","currentTime","setCurrentTime","today","Date","date","getFullYear","getMonth","slice","getDate","time","getHours","getMinutes","close","onSubmit","e","preventDefault","noValidate","TextField","onChange","currentWork","target","value","label","type","defaultValue","InputLabelProps","shrink","clickedOk","AboutModal","closeAboutModal","format","inputDate","isNaN","getTime","App","setTasks","setAddClicked","about","setAbout","body","modalClickHandler","closeModalHandler","dateAndTimeHandler","curDate","entDate","curTime","entTime","dateAdded","toString","Math","abs","prevValues","random","dateNow","timeNow","length","filter","overflow","position","top","left","transform","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90bd3b21.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Navbar.css\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\n\nconst Navbar = (props) => {\n  return (\n    <div className=\"navbar\">\n      <img\n        className=\"logo\"\n        src=\"https://images.vexels.com/media/users/3/137627/isolated/preview/012f7bd53633f5a6e78e60ea08948c55-minimalist-infinity-logo-by-vexels.png\"\n        alt=\"logo\"\n      />\n\n      <div className=\"navs\">\n        <button onClick={props.addClicked} className=\"nav-button\">\n          <AddCircleIcon fontSize=\"large\" />\n        </button>\n        <button onClick={props.userClicked} className=\"nav-button\">\n          <AccountCircleIcon fontSize=\"large\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react'\nimport './Footer.css';\n\nconst Footer = () => {\n    return (\n        <div className='footer'>\n            <span className='footer-text'>created with <span role='img'> &#128153; </span> by <span style={{color: 'blue'}}> shivam</span> </span>\n        </div>\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nconst EmptyTaskPage = (props) => {\n    return (\n        <div>\n          <div onClick={props.clicked}>\n          <AddCircleIcon style={{\n            fontSize: 50,\n            cursor: 'pointer'\n          }} />\n          </div>\n            <h4 style={{\n              marginTop: 3\n            }}>Please add your very first task.</h4>\n          </div>\n    )\n}\n\nexport default EmptyTaskPage\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function AlertDialog(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button style={{\n              background: \"red\",\n              color: \"white\",\n            }} variant={props.variant} size={props.size} onClick={handleClickOpen}>\n        {props.children}\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete this task?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Once a task is deleted it cannot be accessed again no matter what, So please make your decision wisely.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() =>{\n              props.clickedDelete()\n              handleClose()\n              }} style={{\n              color: 'red'\n          }} color=\"primary\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function TransitionsModal(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [done, setDone] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n    setDone(true);\n    props.clickedDone();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      {done ? <Button disabled variant={props.variant} style={{\n          background: 'green',\n          color: 'white'\n      }} size={props.size}>COMPLETED</Button> : <Button variant={props.variant} color={props.color} size={props.size} onClick={handleOpen}>\n        {props.children}\n      </Button>}\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">You are Awesome !!!</h2>\n            <p id=\"transition-modal-description\">You achieved your goal within time.</p>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./TaskBlock.css\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport AlertDialog from \"../AlertBox/AlertBox\";\nimport CongratsModal from './../CongratsModal/CongratsModal';\n\nconst TaskBlock = (props) => {\n  const [done, setDone] = useState(false);\n  //clock functionality\n  const renderTime = ({ remainingTime }) => {\n    if (remainingTime === 0) {\n      return <div className=\"timer\">Too lale...</div>;\n    }\n\n    return (\n      <div className=\"timer\">\n        <div className=\"text\">Remaining</div>\n        <div className=\"value\">{remainingTime}</div>\n        <div className=\"text\">seconds</div>\n      </div>\n    );\n  };\n\n  const doneHandler = () => { \n    setDone(true);\n  };\n\n\n  return (\n    <div className=\"task-block\">\n      <div className=\"timer-clock\">\n        <div className=\"timer-wrapper\">\n          <CountdownCircleTimer\n            size=\"150\"\n            isPlaying = {!done}\n            duration={props.seconds}\n            colors={[[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]]}\n            onComplete={() => [false, 1000]}\n          >\n            {renderTime}\n          </CountdownCircleTimer>\n        </div>\n      </div>\n      <div className=\"task-info\">\n        <div className=\"info\">\n          <h1\n            style={{\n              marginBottom: 12,\n            }}\n          >\n            {props.workTitle}\n          </h1>\n          <hr className=\"seperator\"></hr>\n          <h4\n            style={{\n              marginTop: 12,\n            }}\n          >\n            To Be Completed Before :\n            <span style={{ fontSize: 24 }}>\n              {\" \"}\n              {props.dateEntered} {props.timeEntered}\n            </span>\n          </h4>\n        </div>\n        <div className=\"done\">\n          <CongratsModal size=\"small\" color=\"primary\" variant=\"contained\" clickedDone={doneHandler}>\n            DONE\n          </CongratsModal>\n        </div>\n        <div className=\"delete\">\n          <AlertDialog\n            size=\"small\"\n            clickedDelete={props.clickedDelete}\n            variant=\"contained\"\n          >\n            DELETE\n          </AlertDialog>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskBlock;\n","import React from 'react'\nimport TaskBlock from '../TaskBlock/TaskBlock';\n\nconst NonEmptyTaskPage = (props) => {\n    return (\n        <div>\n            <div style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                marginTop: 70,\n                marginBottom: 50\n            }}>\n            {props.tasks.map(task => <TaskBlock clickedDelete={() => props.clickedDelete(task.id)} key={task.timeEntered} {...task} />)}\n            </div>\n        </div>\n    )\n}\n\nexport default NonEmptyTaskPage\n","import { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200,\n    },\n  }));\n  \n  export default function DateAndTimePickers() {\n    useStyles();\n  }","import React, { useState } from \"react\";\nimport \"./TaskModal.css\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport classes from \"../../DateTimePicker\";\n\n\n\n//Actual Component\nconst TaskModal = (props) => {\n  const [work, setWork] = useState(\"\");\n  const [currentDate, setCurrentDate] = useState(\"\");\n  const [currentTime, setCurrentTime] = useState(\"\");\n\n  //Getting Current Date and Time\n  let today = new Date();\n  let date =\n  today.getFullYear() +\n  \"-\" +\n  (\"0\" + (today.getMonth() + 1)).slice(-2) +\n  \"-\" +\n  (\"0\" + today.getDate()).slice(-2);\n  let time =\n  (\"0\" + today.getHours()).slice(-2) +\n  \":\" +\n  (\"0\" + (today.getMinutes())).slice(-2);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n  };\n\n  const workChangeHandler = (e) => {\n    let currentWork = e.target.value;\n    setWork(currentWork);\n  };\n\n  const dateAndTimeChangeHandler = (e) => {\n    let time = e.target.value.slice(11, 16);\n    let date = e.target.value.slice(0, 10);\n    setCurrentTime(time);\n    setCurrentDate(date);\n  };\n  return (\n    <div className=\"text-modal\">\n      <div onClick={props.close} className=\"close\">\n        <CloseIcon />\n      </div>\n      <form onSubmit={submitHandler} className={classes.container} noValidate>\n        <div className=\"text-field-work\">\n          <TextField\n            onChange={workChangeHandler}\n            id=\"standard-basic\"\n            label=\"Work to be done?\"\n            value={work}\n          />\n        </div>\n        <div className=\"date-time-setter\">\n          <TextField\n            id=\"datetime-local\"\n            label=\"Deadline\"\n            type=\"datetime-local\"\n            defaultValue={`${date}T${time}`}\n            className={classes.textField}\n            onChange={dateAndTimeChangeHandler}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </div>\n        <div className=\"form-button\">\n          <Button onClick={() => props.clickedOk(date, currentDate, time, currentTime, work)} type=\"submit\" variant=\"contained\" color=\"primary\">\n            OK\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default TaskModal;\n","import React from 'react';\nimport './AboutModal.css';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nconst AboutModal = (props) => {\n    return (\n        <div className='about-modal'>\n            <div className=\"container\">\n            <div onClick={props.closeAboutModal} className=\"cross\">&#10060;</div>\n                <AccountCircleIcon style={{\n                    fontSize: '150px'\n                }} />\n                <h4>Hello there, I am Shivam and this is the small project that i have made using ReactJs. It is a Task Management Project. It is a very interactive Project and also very simple at the same time. Hope you would like it &#128513; .</h4>\n                <h3>Wanna Contact</h3>\n                <h5>Email: <span style={{\n                    color: 'lightBlue',\n                    fontSize: 20\n                }}>lazycoderlife@gmail.com</span></h5>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default AboutModal;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Footer from \"./components/Footer/Footer\";\nimport EmptyTaskPage from \"./components/EmptyTaskPage/EmptyTaskPage\";\nimport NonEmptyTaskPage from \"./components/NonEmptyTaskPage/NonEmptyTaskPage\";\nimport TaskModal from \"./components/TaskModal/TaskModal\";\nimport AboutModal from \"./components/AboutModal/AboutModal\";\n\nfunction format(inputDate) {\n  var date = new Date(inputDate);\n  if (!isNaN(date.getTime())) {\n    // Months use 0 index.\n    return (\n      (\"0\" + (date.getMonth() + 1)).slice(-2) +\n      \"/\" +\n      (\"0\" + date.getDate()).slice(-2) +\n      \"/\" +\n      date.getFullYear()\n    );\n  }\n}\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [addClicked, setAddClicked] = useState(false);\n  const [about, setAbout] = useState(false);\n  let body = null;\n  const modalClickHandler = () => {\n    setAddClicked(true);\n  };\n\n  const closeModalHandler = () => {\n    setAddClicked(false);\n  };\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const userClickHandler = () => {\n    setAbout(true);\n  };\n\n  const closeAboutModalHandler = () => {\n    setAbout(false);\n  };\n\n  const dateAndTimeHandler = (curDate, entDate, curTime, entTime, work) => {\n    let dateAdded = new Date(\n      format(entDate).toString() + \" \" + entTime.toString()\n    );\n    let seconds = Math.abs(dateAdded.getTime() - new Date().getTime()) / 1000;\n    setTasks((prevValues) => {\n      return [\n        ...prevValues,\n        {\n          id: Math.random(),\n          dateNow: curDate,\n          dateEntered: format(entDate),\n          timeNow: curTime,\n          timeEntered: entTime,\n          workTitle: work,\n          seconds: seconds,\n        },\n      ];\n    });\n    setAddClicked(false);\n  };\n\n  if (tasks.length === 0) {\n    body = addClicked ? (\n      <TaskModal close={closeModalHandler} clickedOk={dateAndTimeHandler} />\n    ) : (\n      <EmptyTaskPage clicked={modalClickHandler} />\n    );\n  } else {\n    body = addClicked ? (\n      <TaskModal close={closeModalHandler} clickedOk={dateAndTimeHandler} />\n    ) : (\n      <NonEmptyTaskPage clickedDelete={deleteTask} tasks={tasks} />\n    );\n  }\n  return !about ? (\n    <div className=\"App\" style={{ overflow: \"hidden\" }}>\n      <Navbar addClicked={modalClickHandler} userClicked={userClickHandler} />\n      <div\n        style={\n          addClicked || tasks.length === 0\n            ? {\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n              }\n            : {}\n        }\n      >\n        {body}\n      </div>\n\n      <Footer />\n    </div>\n  ) : (\n    <AboutModal closeAboutModal={closeAboutModalHandler} />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}